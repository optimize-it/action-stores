name: Publish action store changes

on:
  push:
    branches: "**"
  pull_request:
    branches: "**"
    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags

      - name: Setup Environment
        run: sudo apt-get install -y curl jq

      - name: Get changed files
        id: getchange
        run: |
          set -e
          LAST_COMMIT=$(git rev-parse HEAD~1 2>/dev/null)
          if [ -z "$LAST_COMMIT" ]; then
            # If there's no commit to compare with, compare the current commit with an empty tree
            echo "No commit found to compare with. Using empty tree commit hash."
            LAST_COMMIT=4b825dc642cb6eb9a060e54bf8d69288fbee4904
          fi
          echo "Comparing with commit: $LAST_COMMIT"
          echo "Git diff output:"
          git diff --name-only $LAST_COMMIT..HEAD
          echo "::set-output name=files::$(git diff --name-only $LAST_COMMIT..HEAD)"
          echo "Changed files:"
          echo ${{ steps.getchange.outputs.files }}
      - name: Bundle and send changes
        env:
          KUBIYA_API_KEY: ${{ secrets.KUBIYA_API_KEY }}
          KUBIYA_ORGANIZATION: ${{ secrets.KUBIYA_ORGANIZATION }}
        run: |
          set -e
          for file in ${{ steps.getchange.outputs.files }}; do
            echo "Processing file: $file"
            if [ -f "$file" ]; then
              echo "File exists. Creating tar file."
              BASENAME=$(basename "$file")
              DIRNAME=$(dirname "$file")
              if [ "$DIRNAME" != "." ]; then
                IMAGE_NAME="kubiya/action-store-$(dirname "$file" | sed 's/\//-/g')"
                tar -czf changes.tar.gz -C "$DIRNAME" "$BASENAME"
                if [ -s changes.tar.gz ]; then
                  echo "Tar file created. Sending request to Kubiya API."
                  ENCODED_CONTENT=$(base64 -w 0 changes.tar.gz)
                  RESPONSE=$(curl -s -o output.json -w "%{http_code}" -X POST https://api.kubiya.ai/api/v1/function/function-builder?organization=${KUBIYA_ORGANIZATION} \
                  -H "Content-Type: application/json" \
                  -H "Authorization: ApiKey ${KUBIYA_API_KEY}" \
                  -d "{
                    \"action\": \"build\",
                    \"input\": {
                      \"image\": \"$IMAGE_NAME\",
                      \"source_context\": \"$ENCODED_CONTENT\"
                    }
                  }")
                  if [ $RESPONSE -eq 200 ]; then
                    echo "Request sent successfully."
                  else
                    echo "Request failed. Response:"
                    cat output.json
                    exit 1
                  fi
                else
                  echo "Tar file is empty. Skipping."
                fi
              else
                echo "Skipping main directory."
              fi
            else
              echo "File does not exist. Skipping."
            fi
          done
